name: npackages-publish-dev

on:
  push:
    branches:
      - development
      
env:
  version: 0

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: none 
      issues: write
      packages: write
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          ref: 'development'
          fetch-depth: 0
          token: ${{secrets.GH_ADMIN_TOKEN}}

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY }}
      #     aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_KEY }}
      #     aws-region: ap-south-1
          
      # - name: Secrets from aws parameter store
      #   run: |
      #       aws ssm get-parameters --names /development/NPMRC --with-decryption --output text --query "Parameters[*].Value" > .npmrc
      #       ls
      #       cat .npmrc
      - name: Environment intlialize and publish
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/

      - run: |
          export GITHUB_AUTH="${{ secrets.GH_ADMIN_TOKEN }}"
          git config user.name "${{ secrets.GH_ADMIN_USERNAME }}"
          git config user.email "${{ secrets.GH_ADMIN_EMAIL }}"
          git remote set-url origin https://${{secrets.GH_ADMIN_USERNAME}}:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY
          echo "Package : Publishing"
          npm i -f
          # npm install -g semantic-release semantic-release-monorepo @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/github @semantic-release/npm
          # npx lerna exec --concurrency 1 -- npx --no-install semantic-release -e semantic-release-monorepo -b development --tag-format='${LERNA_PACKAGE_NAME}-beta-\${version}'
          # npx lerna version --conventional-prerelease --preid beta --yes --force-git-tag --no-private --no-changelog
          git pull && lerna version prerelease --preid canary --force-publish --yes && release --pre --skip-questions --yes
          echo "Package : Published"
 
        env: 
          GH_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
